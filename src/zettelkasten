#!/usr/bin/env bash

set -e
export ZETTEL_WORKDIR="$(cd "$(dirname "$0")" && pwd)"
export $(cat "$ZETTEL_WORKDIR/../config" | xargs)

source "$ZETTEL_WORKDIR/globals"
source "$ZETTEL_WORKDIR/common"

cli_help() {
    cli_name="${0##*/}"
    echo "
   XETTELKASTEN CLI
   ------------------------------------ Version: $(cat "$ZETTEL_WORKDIR/VERSION")
    Usage: $cli_name [command]

   Commands:
   ------------------------------------
    init      initialize xettelkasten
    ref       manage references
    go        navigate
    zettel    create/remove zettel
    status    output open zettel
    *         Help
    "
    exit 1
}

expand_main() {
    echo "$(
        export PREAMBLE="$PREAMBLE_FILE"
        envsubst < "$MAIN_TEMPLATE"
    )"
}

copy_files() {
        log "copy preamble"
        cp  "$ZETTEL_PREAMBLE" "$ZETTEL_DATA/$PREAMBLE_FILE"

        log "creating new glossary file"
        echo "$(expand_main)" > "$ZETTEL_DATA/glossary.tex" 

        log "copying custom files"
        for f in "$ZETTEL_WORKDIR"/../base/_*; do
            [ -f "$f" ] || continue
            name="$(basename "$f")"
            new_name="${name#_}"
            cp "$f" "$ZETTEL_DATA/$new_name"
        done
}

init_kasten() {
    if [ -d "$ZETTEL_DATA" ]; then
        info "reinitializing"
        copy_files
        exit
    fi
    info "initializing new zettelkasten"
    mkdir "$ZETTEL_DATA"
    copy_files
}

CMD=$ZETTEL_WORKDIR/commands

case "$1" in
    init)
        init_kasten && exit
        ;;
    ref)
        check_kasten
        shift
        "$CMD/ref" "$@"
        ;;
    go)
        check_kasten
        shift
        "$CMD/go" "$@"
        ;;
    zettel)
        check_kasten
        shift
        "$CMD/zettel" "$@"
        ;;
    git)
        check_kasten
        shift
        "$CMD/git" "$@"
        ;;
    status)
        check_kasten
        echo "currently viewing $(viewing)"
        ;;
    *)
        cli_help
        ;;
esac
