#!/usr/bin/env bash

log() {
	script_name=${0##*/}
	timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
	echo "== $script_name $timestamp $1"
}

info() {
	tmux display-message "$1"
}

zettel_session() {
    if ! tmux has-session -t="$SESSION_NAME" 2> /dev/null; then
		log "creating new session"

		log "removing old pipe"
		rm -rf $NVIM_PIPE

        cmd="$NVIM_CMD --listen $NVIM_PIPE"
		log "$cmd"

		log $(tmux new-session -c $ZETTEL_DATA -d -s "$SESSION_NAME" "$cmd")
    fi

	log "tmux switch client"
    tmux switch-client -t $SESSION_NAME
}

reference_file() {
    current_zettel=$1
    references="$ZETTEL_DATA/$current_zettel/${REFERENCE_FILENAME}"
    echo $references
}

open_zettel() {
	log "open zettel $1"
    zettel=$(basename "$1")
    if [[ -z $zettel ]]; then
		log "nothing to do, exiting"
        info "nothing to do"
        exit
    fi
    filepath="$ZETTEL_DATA/$zettel/$ZETTEL_FILENAME"
	log "filepath: $filepath"
    if ! [[ -f $filepath ]]; then
		log "does not exist"
        info "$zettel does not exist."
        exit
    fi
	log "nvim remote"
    $NVIM_CMD --server $NVIM_PIPE --remote $filepath
}

zettel_list() {
    list=$(find $ZETTEL_DATA -type d -mindepth 1 -maxdepth 1)
    for zettel in $list
    do
        printf %"s\n" "$(basename $zettel)"
    done
}

viewing() {
    # for some reason it outputs to sterr wtf?
    nvim --server $NVIM_PIPE \
        --remote-expr "expand('%')" \
        2&>1 > /tmp/zettelkasten_open

    open=$(</tmp/zettelkasten_open)

    if [[ -z $open ]]
    then
        exit 1
    else
        echo $(cd $ZETTEL_DATA; basename $(dirname $open))
    fi
}
